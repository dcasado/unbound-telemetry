on:
  push:
    branches:
      - master

name: Publish binary

jobs:
  publish-to-github:
    name: Publish to Github
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
        toolchain:
          - 1.46.0  # MSRV

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
          target: ${{ matrix.target }}
      - name: Run build
        uses: actions-rs/cargo@v1
        env:
          PKG_CONFIG_ALLOW_CROSS: 1
        with:
          command: build
          args: --target ${{ matrix.target }} --features vendored
          use-cross: true

      - name: Package Artifacts
        run: |
          src=$(pwd)
          stage=
          case $RUNNER_OS in
              Linux)
                  stage=$(mktemp -d)
                  ;;
          esac
          cp target/${{ matrix.target }}/release/unbound-telemetry $stage/
          cd $stage
          RELEASE_VERSION=$(date +'%Y-%m-%d')-$(git rev-parse --short HEAD)
          ASSET_NAME="unbound-telemetry-$RELEASE_VERSION-${{ matrix.target }}.tar.gz"
          ASSET_PATH="$src/$ASSET_NAME"
          CHECKSUM_PATH="$ASSET_PATH.sha256"
          echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
          echo "CHECKSUM_PATH=$CHECKSUM_PATH" >> $GITHUB_ENV
          tar czf $ASSET_PATH *
          cd $src
          case $RUNNER_OS in
              Linux)
                  sha256sum $ASSET_NAME > $CHECKSUM_PATH
                  ;;
          esac

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET_PATH }}
            ${{ env.CHECKSUM_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
